<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ThingsGateway.Foundation</name>
    </assembly>
    <members>
        <member name="T:ThingsGateway.Foundation.DeviceAddressBase">
            <summary>
            设备地址数据的信息，对每个协议都建立其变量地址的表示类
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.DeviceAddressBase.AddressStart">
            <summary>
            起始地址
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.DeviceAddressBase.Length">
            <summary>
            读取的数据长度，有可能不参与运算
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.DeviceAddressBase.Parse(System.String,System.Int32)">
            <summary>
            字符串地址转换为实体类
            </summary>
            <param name="address">变量地址</param>
            <param name="length">读取长度</param>
        </member>
        <member name="M:ThingsGateway.Foundation.DeviceAddressBase.ToString">
            <summary>
            实体类转换为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesBase">
            <summary>
            读写设备基类
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesBase.DataFormat">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesBase.Logger">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesBase.ThingsGatewayBitConverter">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesBase.TimeOut">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesBase.RegisterByteLength">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.GetBitOffset(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.ReadAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.SendThenResponseAsync(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.SendThenResponse(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Boolean[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Int16,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Byte,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.UInt16,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.UInt32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.UInt64,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Single,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.Double,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.WriteAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesBase.GetAddressDescription">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesClientBase">
            <inheritdoc cref="T:ThingsGateway.Foundation.ReadWriteDevicesBase"/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesClientBase.ConnectTimeOut">
            <summary>
            链接超时时间
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesClientBase.Connect(System.Threading.CancellationToken)">
            <summary>
            连接操作
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesClientBase.ConnectAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="M:ThingsGateway.Foundation.ReadWriteDevicesClientBase.Connect(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesClientBase.Disconnect">
            <summary>
            断开操作
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesClientBase.SetDataAdapter">
            <summary>
            设置适配器
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesExHelpers">
            <summary>
            读写扩展方法
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetBoolValue(System.String)">
            <summary>
            转换布尔值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.IsBoolValue(System.String)">
            <summary>
            转换布尔值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.WriteAsync(ThingsGateway.Foundation.IReadWriteDevice,System.String,System.Type,System.String,System.Threading.CancellationToken)">
            <summary>
            根据数据类型写入设备，只支持C#内置数据类型，但不包含<see cref="T:System.Decimal"/>和<see cref="T:System.Char"/>和<see cref="T:System.SByte"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.ReadAsync``1(ThingsGateway.Foundation.IReadWriteDevice,System.String,System.Threading.CancellationToken)">
            <summary>
            根据数据类型从设备中获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.ReadAsync(ThingsGateway.Foundation.IReadWriteDevice,System.String,System.Type,System.Threading.CancellationToken)">
            <summary>
            根据数据类型从设备中获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetDynamicDataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Type,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetBoolDataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetByteDataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetInt16DataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetUInt16DataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetInt32DataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetUInt32DataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetInt64DataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetUInt64DataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetSingleDataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetDoubleDataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.GetStringDataFormBytes(ThingsGateway.Foundation.IThingsGatewayBitConverter,System.String,System.Byte[],System.Int32)">
            <summary>
            根据数据类型获取实际值
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesSerialBase">
            <summary>
            TCP读写设备
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.WaitingClientEx">
            <summary>
            WaitingClientEx
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.#ctor(ThingsGateway.Foundation.Serial.SerialsSession)">
            <summary>
            <inheritdoc cref="T:ThingsGateway.Foundation.ReadWriteDevicesSerialBase"/>
            </summary>
            <param name="serialSession"></param>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.SerialsSession">
            <summary>
            串口管理对象
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.Connect(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.ConnectAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.Disconnect">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.SendThenResponse(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.SendThenResponseAsync(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesSerialBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase">
            <summary>
            TCP读写设备
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.WaitingClientEx">
            <summary>
            WaitingClientEx
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.#ctor(ThingsGateway.Foundation.TcpClientEx)">
            <inheritdoc cref="T:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase"/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.TcpClientEx">
            <summary>
            Socket管理对象
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.Connect(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.ConnectAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.Disconnect">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.SendThenResponse(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.SendThenResponseAsync(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpClientBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase">
            <summary>
            服务设备
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.#ctor(TouchSocket.Sockets.TcpService)">
            <inheritdoc cref="T:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase"/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.TcpService">
            <summary>
            服务管理对象
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.SendThenResponseAsync(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.SendThenResponse(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.SetDataAdapter">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.ConnectAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.Connect(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.Disconnect">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.SetDataAdapter(TouchSocket.Sockets.SocketClient)">
            <summary>
            设置适配器
            </summary>
            <param name="client">客户端</param>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpServerBase.Received(TouchSocket.Sockets.SocketClient,TouchSocket.Core.IRequestInfo)">
            <summary>
            接收解析
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesUdpBase">
            <summary>
            UDP读写设备
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.WaitingClientEx">
            <summary>
            WaitingClientEx
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.#ctor(TouchSocket.Sockets.UdpSession)">
            <inheritdoc cref="T:ThingsGateway.Foundation.ReadWriteDevicesUdpBase"/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.UdpSession">
            <summary>
            Socket管理对象
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.ConnectAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.Connect(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.Disconnect">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.SendThenResponseAsync(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.SendThenResponse(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpBase.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.IReadWrite">
            <summary>
            读写接口
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IReadWrite.Logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.GetBitOffset(System.String)">
            <summary>
            获取变量地址对应的bit偏移
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.ReadAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            异步批量读取字节数组信息，需要指定地址和长度<br></br>
            如果需要固定的类型返回，可以使用<see cref="M:ThingsGateway.Foundation.ReadWriteDevicesExHelpers.ReadAsync``1(ThingsGateway.Foundation.IReadWriteDevice,System.String,System.Threading.CancellationToken)"/><br></br>
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.SendThenResponse(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <summary>
            发送字节组，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.SendThenResponseAsync(System.Byte[],TouchSocket.Sockets.WaitingOptions,System.Threading.CancellationToken)">
            <summary>
            异步发送字节组，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            异步写入原始的byte数组数据到指定的地址，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Boolean[],System.Threading.CancellationToken)">
            <summary>
            异步写入bool数组数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            异步写入bool数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Int16,System.Threading.CancellationToken)">
            <summary>
            异步写入short数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.UInt16,System.Threading.CancellationToken)">
            <summary>
            异步写入ushort数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            异步写入int数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            异步写入uint数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            异步写入long数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.UInt64,System.Threading.CancellationToken)">
            <summary>
            异步写入ulong数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Single,System.Threading.CancellationToken)">
            <summary>
            异步写入float数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.Double,System.Threading.CancellationToken)">
            <summary>
            异步写入double数据，返回结果
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWrite.WriteAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            异步写入字符串信息
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.IReadWriteDevice">
            <summary>
            读写设备接口
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IReadWriteDevice.DataFormat">
            <summary>
            多字节数据解析规则
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IReadWriteDevice.ThingsGatewayBitConverter">
            <summary>
            数据解析规则
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IReadWriteDevice.TimeOut">
            <summary>
            读写超时时间
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IReadWriteDevice.RegisterByteLength">
            <summary>
            一个寄存器所占的字节长度
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IReadWriteDevice.GetAddressDescription">
            <summary>
            寄存器地址的详细说明
            </summary>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.EasyCRC16">
            <summary>
            HSL摘录，用于CRC16验证的类
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyCRC16.CheckCRC16(System.Byte[])">
            <summary>
            来校验对应的接收数据的CRC校验码，默认多项式码为0xA001
            </summary>
            <param name="value">需要校验的数据，带CRC校验码</param>
            <returns>返回校验成功与否</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyCRC16.CheckCRC16(System.Byte[],System.Byte,System.Byte)">
            <summary>
            指定多项式码来校验对应的接收数据的CRC校验码
            </summary>
            <param name="value">需要校验的数据，带CRC校验码</param>
            <param name="CH">多项式码高位</param>
            <param name="CL">多项式码低位</param>
            <returns>返回校验成功与否</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyCRC16.CRC16(System.Byte[])">
            <summary>
            获取对应的数据的CRC校验码，默认多项式码为0xA001
            </summary>
            <param name="value">需要校验的数据，不包含CRC字节</param>
            <returns>返回带CRC校验码的字节数组，可用于串口发送</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyCRC16.CRC16(System.Byte[],System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            通过指定多项式码来获取对应的数据的CRC校验码
            </summary>
            <param name="value">需要校验的数据，不包含CRC字节</param>
            <param name="CL">多项式码地位</param>
            <param name="CH">多项式码高位</param>
            <param name="preH">预置的高位值</param>
            <param name="preL">预置的低位值</param>
            <returns>返回带CRC校验码的字节数组，可用于串口发送</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyCRC16.CRC16Only(System.Byte[],System.Int32,System.Int32)">
            <summary>
            通过指定多项式码来获取对应的数据的CRC校验码
            </summary>
            <param name="value">需要校验的数据，不包含CRC字节</param>
            <param name="index">计算的起始字节索引</param>
            <param name="length">计算的字节长度</param>
            <returns>返回带CRC校验码的字节数组，可用于串口发送</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyCRC16.CRC16Only(System.Byte[],System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            通过指定多项式码来获取对应的数据的CRC校验码
            </summary>
            <param name="value">需要校验的数据，不包含CRC字节</param>
            <param name="index">计算的起始字节索引</param>
            <param name="length">计算的字节长度</param>
            <param name="CL">多项式码地位</param>
            <param name="CH">多项式码高位</param>
            <param name="preH">预置的高位值</param>
            <param name="preL">预置的低位值</param>
            <returns>返回带CRC校验码的字节数组，可用于串口发送</returns>
        </member>
        <member name="T:ThingsGateway.Foundation.EasyIncrementCount">
            <summary>
            自增
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.#ctor(System.Int64,System.Int64,System.Int32)">
            <inheritdoc cref="T:ThingsGateway.Foundation.EasyIncrementCount"/>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.Finalize">
            <inheritdoc cref="T:ThingsGateway.Foundation.EasyIncrementCount"/>
        </member>
        <member name="P:ThingsGateway.Foundation.EasyIncrementCount.IncreaseTick">
            <summary>
            Tick
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.EasyIncrementCount.MaxValue">
            <summary>
            获取当前的计数器的最大的设置值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.GetCurrentValue">
            <summary>
            获取自增信息，获得数据之后，下一次获取将会自增，如果自增后大于最大值，则会重置为最小值，如果小于最小值，则会重置为最大值。
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.ResetCurrentValue">
            <summary>
            将当前的值重置为初始值。
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.ResetCurrentValue(System.Int64)">
            <summary>
            将当前的值重置为指定值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.ResetMaxValue(System.Int64)">
            <summary>
            重置当前序号的最大值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.ResetStartValue(System.Int64)">
            <summary>
            重置当前序号的初始值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyIncrementCount.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.EasyLock">
            <summary>
            EasyLock，使用轻量级SemaphoreSlim锁，只允许一个并发量，并记录并发信息
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyLock.Finalize">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.EasyLock.LockWaitCount">
            <summary>
            当前正在等待的数量
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.EasyLock.IsWaitting">
            <summary>
            当前锁是否在等待当中
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyLock.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyLock.Release">
            <summary>
            离开锁
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyLock.Wait">
            <summary>
            进入锁
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyLock.Wait(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            进入锁
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyLock.WaitAsync">
            <summary>
            进入锁
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.EasyLock.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            进入锁
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.TcpClientEx">
            <summary>
            简单TCP客户端
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientEx.Received">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientEx.HandleReceivedData(TouchSocket.Core.ByteBlock,TouchSocket.Core.IRequestInfo)">
            <summary>
            接收数据
            </summary>
            <param name="byteBlock"></param>
            <param name="requestInfo"></param>
        </member>
        <member name="T:ThingsGateway.Foundation.TcpClientBaseEx">
            <summary>
            TCP客户端
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Connected">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Connecting">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Disconnected">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Disconnecting">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.OnConnected(TouchSocket.Sockets.ConnectedEventArgs)">
            <summary>
            已经建立Tcp连接
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.OnConnecting(TouchSocket.Sockets.ConnectingEventArgs)">
            <summary>
            准备连接的时候，此时已初始化Socket，但是并未建立Tcp连接
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.OnDisconnected(TouchSocket.Sockets.DisconnectEventArgs)">
            <summary>
            断开连接。在客户端未设置连接状态时，不会触发
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.OnDisconnecting(TouchSocket.Sockets.DisconnectEventArgs)">
            <summary>
            即将断开连接(仅主动断开时有效)。
            <para>
            当主动调用Close断开时。
            </para>
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.LastReceivedTime">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.LastSendTime">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.OnHandleRawBuffer">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.OnHandleReceivedData">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Container">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.CanSetDataHandlingAdapter">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Config">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.DataHandlingAdapter">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.IP">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.MainSocket">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Online">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.CanSend">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.PluginsManager">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Port">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.ReceiveType">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.UseSsl">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.Protocol">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.RemoteIPHost">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.TcpClientBaseEx.IsClient">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Close(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Dispose(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.TcpConnect(System.Int32)">
            <summary>
            建立Tcp的连接。
            </summary>
            <param name="timeout"></param>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Exception"></exception>
            <exception cref="T:System.TimeoutException"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.TcpConnectAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            建立Tcp的连接。
            </summary>
            <param name="timeout"></param>
            <param name="token"></param>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.Exception"></exception>
            <exception cref="T:System.TimeoutException"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Connect(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.ConnectAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.GetStream">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.SetDataHandlingAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Setup(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Setup(TouchSocket.Core.TouchSocketConfig)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.HandleReceivedData(TouchSocket.Core.ByteBlock,TouchSocket.Core.IRequestInfo)">
            <summary>
            处理已接收到的数据。
            </summary>
            <param name="byteBlock">以二进制流形式传递</param>
            <param name="requestInfo">以解析的数据对象传递</param>
            <returns>如果返回<see langword="true"/>则表示数据已被处理，且不会再向下传递。</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.HandleSendingData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            当即将发送时，如果覆盖父类方法，则不会触发插件。
            </summary>
            <param name="buffer">数据缓存区</param>
            <param name="offset">偏移</param>
            <param name="length">长度</param>
            <returns>返回值表示是否允许发送</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.LoadConfig(TouchSocket.Core.TouchSocketConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.OnDelaySenderError(System.Exception)">
            <summary>
            在延迟发生错误
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.SetAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)">
            <summary>
            设置适配器，该方法不会检验<see cref="P:ThingsGateway.Foundation.TcpClientBaseEx.CanSetDataHandlingAdapter"/>的值。
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.HandleBuffer(TouchSocket.Core.ByteBlock)">
            <summary>
            处理数据
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Send(TouchSocket.Core.IRequestInfo)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="requestInfo"></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="transferBytes"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.SendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.SendAsync(TouchSocket.Core.IRequestInfo)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="requestInfo"></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="transferBytes"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.DefaultSend(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.TcpClientBaseEx.DefaultSendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="T:ThingsGateway.Foundation.WaitingClientExExtension">
            <summary>
            WaitingClientExtensions
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.WaitingClientExExtension.GetWaitingClientEx``1(``0,TouchSocket.Sockets.WaitingOptions,System.Func{TouchSocket.Sockets.ResponsedData,System.Boolean})">
            <summary>
            获取筛选条件的可等待的客户端。
            </summary>
            <typeparam name="TClient"></typeparam>
            <param name="client"></param>
            <param name="waitingOptions"></param>
            <param name="func">当条件成立时返回</param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.WaitingClientExExtension.GetWaitingClientEx``1(``0,TouchSocket.Sockets.WaitingOptions)">
            <summary>
            获取可等待的客户端。
            </summary>
            <typeparam name="TClient"></typeparam>
            <param name="client"></param>
            <param name="waitingOptions"></param>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.FoundationConst">
            <summary>
            常量
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.FoundationConst.LogMessageHeader">
            <summary>
            显示报文标识
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1">
            <summary>
            TCP适配器基类
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.#ctor">
            <inheritdoc cref="T:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1"/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.CanSendRequestInfo">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.CanSplicingSend">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.IsSendPackCommand">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.Request">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.PackCommand(System.Byte[])">
            <summary>
            发送前，对当前的命令进行打包处理
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.Filter(TouchSocket.Core.ByteBlock@,System.Boolean,`0@,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.GetInstance">
            <summary>
            获取泛型实例。
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.GetResponse(TouchSocket.Core.ByteBlock,`0,System.Byte[],System.Byte[])">
            <summary>
            解包获取实际数据包
            <para>当不满足解析条件时，请返回<see cref="F:TouchSocket.Core.FilterResult.Cache"/>，此时会保存<see cref="P:TouchSocket.Core.ByteBlock.CanReadLen"/>的数据</para>
            <para>当数据部分异常时，请移动<see cref="P:TouchSocket.Core.ByteBlock.Pos"/>到指定位置，然后返回<see cref="F:TouchSocket.Core.FilterResult.GoOn"/></para>
            <para>当完全满足解析条件时，请返回<see cref="F:TouchSocket.Core.FilterResult.Success"/>最后将<see cref="P:TouchSocket.Core.ByteBlock.Pos"/>移至指定位置。</para>
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.GoSend(System.Byte[])">
            <summary>
            发送方法,会重新建立<see cref="P:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.Request"/>
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.PreviewSend(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesTcpDataHandleAdapter`1.UnpackResponse(`0,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            报文拆包
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1">
            <summary>
            UDP适配器基类
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.#ctor">
            <inheritdoc cref="T:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1"/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.CanSendRequestInfo">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.CanSplicingSend">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.IsSendPackCommand">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.Request">
            <summary>
            读写接口返回的实际消息对象，每次发送数据前会清空字节数组
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.PackCommand(System.Byte[])">
            <summary>
            发送前，对当前的命令进行打包处理<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.GetInstance">
            <summary>
            获取泛型实例。
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.GoSend(System.Net.EndPoint,System.Byte[])">
            <summary>
            预发送方法，会对命令重新打包并发送字节数组
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.PreviewReceived(System.Net.EndPoint,TouchSocket.Core.ByteBlock)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.PreviewSend(System.Net.EndPoint,System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.PreviewSend(System.Net.EndPoint,System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.PreviewSend(TouchSocket.Core.IRequestInfo)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.Reset">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ReadWriteDevicesUdpDataHandleAdapter`1.UnpackResponse(System.Byte[],System.Byte[])">
            <summary>
            根据对方返回的报文命令，对命令进行基本的拆包<br />
            </summary>
            <remarks>
            在实际解包的操作过程中，通常对状态码，错误码等消息进行判断，如果校验不通过，将携带错误消息返回<br />
            </remarks>
            <param name="send">发送的原始报文数据</param>
            <param name="response">设备方反馈的原始报文内容</param>
            <returns>返回拆包之后的报文信息，默认不进行任何的拆包操作</returns>
        </member>
        <member name="T:ThingsGateway.Foundation.Extension.Bool.BoolExtensions">
            <summary>
            bool扩展
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Bool.BoolExtensions.BoolArrayToByte(System.Boolean[])">
            <summary>
            将bool数组转换到byte数组
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.Extension.Byte.ByteExtensions">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Byte.ByteExtensions.BoolOnByteIndex(System.Byte,System.Int32)">
            <summary>
            获取byte数据类型的第offset位，是否为True<br />
            </summary>
            <param name="value">byte数值</param>
            <param name="offset">索引位置</param>
            <returns>结果</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Byte.ByteExtensions.BytesReverseByWord(System.Byte[])">
            <summary>
            将byte数组按照双字节进行反转，如果为单数的情况，则自动补齐<br />
            </summary>
            <param name="inBytes">输入的字节信息</param>
            <returns>反转后的数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Byte.ByteExtensions.ByteToBoolArray(System.Byte[],System.Int32)">
            <summary>
            从Byte数组中提取位数组，length代表位数<br />
            </summary>
            <param name="InBytes">原先的字节数组</param>
            <param name="length">想要转换的长度，如果超出自动会缩小到数组最大长度</param>
            <returns>转换后的bool数组</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Byte.ByteExtensions.GetBoolByIndex(System.Byte[],System.Int32)">
            <summary>
            获取Byte数组的第 boolIndex 偏移的bool值，这个偏移值可以为 10，就是第 1 个字节的 第3位 <br />
            </summary>
            <param name="bytes">字节数组信息</param>
            <param name="boolIndex">指定字节的位偏移</param>
            <returns>bool值</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Byte.ByteExtensions.ToHexString(System.Byte[],System.String)">
            <summary>
            字节数组默认转16进制字符
            </summary>
            <param name="buffer"></param>
            <param name="splite"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Byte.ByteExtensions.ToHexString(System.Byte[],System.Int32,System.Int32,System.String)">
            <summary>
            字节数组转16进制字符
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="length"></param>
            <param name="splite"></param>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.Extension.ConcurrentQueue.ConcurrentQueueExtensions">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.ConcurrentQueue.ConcurrentQueueExtensions.ToListWithDequeue``1(System.Collections.Concurrent.ConcurrentQueue{``0},System.Int32)">
            <summary>
            批量出队
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.Extension.Generic.GenericExtensions">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.ArrayExpandToLength``1(``0[],System.Int32)">
            <summary>
            将一个数组进行扩充到指定长度，或是缩短到指定长度<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.ArrayExpandToLengthEven``1(``0[])">
            <summary>
            将一个数组进行扩充到偶数长度<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.ArrayRemoveBegin``1(``0[],System.Int32)">
            <summary>
            将一个数组的前面指定位数移除，返回新的一个数组<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.ArrayRemoveDouble``1(``0[],System.Int32,System.Int32)">
            <summary>
            将一个数组的前后移除指定位数，返回新的一个数组<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.ArraySplitByLength``1(``0[],System.Int32)">
            <summary>
            将指定的数据按照指定长度进行分割
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.CopyArray``1(``0[])">
            <summary>拷贝当前的实例数组，是基于引用层的浅拷贝，如果类型为值类型，那就是深度拷贝，如果类型为引用类型，就是浅拷贝</summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.CreateTwoArrayFromOneArray``1(``0[],System.Int32,System.Int32)">
            <summary>将一个一维数组中的所有数据按照行列信息拷贝到二维数组里，返回当前的二维数组</summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            For循环
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objs"></param>
            <param name="action"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.RemoveArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            将一个数组的前后移除指定位数，返回新的一个数组<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.RemoveBegin``1(``0[],System.Int32)">
            <summary>
            将一个数组的前面指定位数移除，返回新的一个数组<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.RemoveLast``1(``0[],System.Int32)">
            <summary>
            将一个数组的后面指定位数移除，返回新的一个数组<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.SelectLast``1(``0[],System.Int32)">
            <summary>
            选择一个数组的后面的几个数据信息<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.SelectMiddle``1(``0[],System.Int32,System.Int32)">
            <summary>
            获取到数组里面的中间指定长度的数组<br />
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.GenericExtensions.SpliceArray``1(``0[],``0[][])">
            <inheritdoc cref="M:ThingsGateway.Foundation.DataTransUtil.SpliceArray``1(``0[][])" />
        </member>
        <member name="T:ThingsGateway.Foundation.Extension.Generic.EnumeratorHelpers">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.Generic.EnumeratorHelpers.ChunkTrivialBetter``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            将项目列表分解为特定大小的块
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="chunksize"></param>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.Extension.String.StringExtensions">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.String.StringExtensions.ArrayToString(System.String[],System.String)">
            <summary>
            将字符串数组转换成字符串
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.String.StringExtensions.ByBase64ToBytes(System.String)">
            <summary>
            从Base64转到数组。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.String.StringExtensions.CombinePathOS(System.String,System.String[])">
            <summary>
            <inheritdoc cref="M:System.IO.Path.Combine(System.String[])"/>
            并把\\转为/
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.String.StringExtensions.SplitDot(System.String)">
            <summary>
            根据英文小数点进行切割字符串，去除空白的字符<br />
            </summary>
            <param name="str">字符串本身</param>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.String.StringExtensions.SplitFirst(System.String,System.Char)">
            <summary>
            只按第一个匹配项分割
            </summary>
            <param name="str"></param>
            <param name="split"></param>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.Extension.OperResultExtensions">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Copy``2(ThingsGateway.Foundation.OperResult{``0,``1})">
            <summary>
            复制信息，包含第一个泛型类
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Copy``1(ThingsGateway.Foundation.OperResult)">
            <summary>
            复制信息，不包含泛型类
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Copy``2(ThingsGateway.Foundation.OperResult)">
            <summary>
            复制信息，不包含泛型类
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Copy(ThingsGateway.Foundation.OperResult)">
            <summary>
            复制信息
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Then(ThingsGateway.Foundation.OperResult,System.Func{ThingsGateway.Foundation.OperResult})">
            <summary>
            操作成功则继续
            </summary>
            <param name="result"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Then``1(ThingsGateway.Foundation.OperResult,System.Func{ThingsGateway.Foundation.OperResult{``0}})">
            <inheritdoc cref="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Then(ThingsGateway.Foundation.OperResult,System.Func{ThingsGateway.Foundation.OperResult})"/>
        </member>
        <member name="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Then``2(ThingsGateway.Foundation.OperResult,System.Func{ThingsGateway.Foundation.OperResult{``0,``1}})">
            <inheritdoc cref="M:ThingsGateway.Foundation.Extension.OperResultExtensions.Then(ThingsGateway.Foundation.OperResult,System.Func{ThingsGateway.Foundation.OperResult})"/>
        </member>
        <member name="T:ThingsGateway.Foundation.LoggerExtensions">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.LoggerExtensions.LogError(TouchSocket.Core.ILog,System.Exception,System.String)">
            <summary>
            输出错误日志
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.LoggerExtensions.LogWarning(TouchSocket.Core.ILog,System.Exception,System.String)">
            <summary>
            输出警示日志
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.LoggerExtensions.LogWarning(TouchSocket.Core.ILog,System.String)">
            <summary>
            输出警示日志
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.LoggerExtensions.LogInformation(TouchSocket.Core.ILog,System.String)">
            <summary>
            输出提示日志
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.ByteTransformUtil">
            <summary>
            所有数据转换类的静态辅助方法
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.ByteTransformUtil.GetResultFromBytes``1(ThingsGateway.Foundation.OperResult{System.Byte[]},System.Func{System.Byte[],``0})">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ByteTransformUtil.GetResultFromOther``1(ThingsGateway.Foundation.OperResult{``0},System.Func{``0,ThingsGateway.Foundation.OperResult})">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ByteTransformUtil.GetResultFromOther``2(ThingsGateway.Foundation.OperResult{``1},System.Func{``1,ThingsGateway.Foundation.OperResult{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ByteTransformUtil.GetSuccessResultFromOther``2(ThingsGateway.Foundation.OperResult{``1},System.Func{``1,``0})">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ByteTransformUtil.GetTransByAddress(System.String@,ThingsGateway.Foundation.IThingsGatewayBitConverter)">
             <summary>
            设备地址可以带有的额外信息包含：
             DATA=XX;
             TEXT=XX;
             BCD=XX;
             LEN=XX;
            <br></br>
             解析地址的附加<see cref="T:ThingsGateway.Foundation.DataFormat"/> />参数方法,获取新的<see cref="T:ThingsGateway.Foundation.IThingsGatewayBitConverter"/>，
             并去掉address中的全部额外信息
             </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.DataTransUtil">
            <summary>
            常用转换
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.ByteToHexString(System.Byte[])">
            <summary>
            字节数据转化成16进制表示的字符串
            </summary>
            <param name="InBytes">字节数组</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.ByteToHexString(System.Byte[],System.Char)">
            <summary>
            字节数据转化成16进制表示的字符串
            </summary>
            <param name="InBytes">字节数组</param>
            <param name="segment">分割符</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.ByteToHexString(System.Byte[],System.Char,System.Int32)">
            <summary>
            字节数据转化成16进制表示的字符串
            </summary>
            <param name="InBytes">字节数组</param>
            <param name="segment">分割符</param>
            <param name="newLineCount">每隔指定数量的时候进行换行</param>
            <returns>返回的字符串</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.ByteToHexString(System.String)">
            <summary>
            字符串数据转化成16进制表示的字符串
            </summary>
            <param name="InString">输入的字符串数据</param>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.CalculateStartBitIndexAndLength(System.Int32,System.UInt16,System.Int32@,System.UInt16@,System.Int32@)">
            <summary>根据当前的位偏移地址及读取位长度信息，计算出实际的字节索引，字节数，字节位偏移</summary>
            <param name="addressStart">起始地址</param>
            <param name="length">读取的长度</param>
            <param name="newStart">返回的新的字节的索引，仍然按照位单位</param>
            <param name="byteLength">字节长度</param>
            <param name="offset">当前偏移的信息</param>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.GetBcdCodeFromChar(System.Char,ThingsGateway.Foundation.BcdFormat)">
            <summary>
            获取BCD值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.GetBcdFromByte(System.Int32,ThingsGateway.Foundation.BcdFormat)">
            <summary>
            获取BCD值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.GetBCDValue(System.Byte[],ThingsGateway.Foundation.BcdFormat)">
            <summary>
            获取BCD值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.GetBytesFromBCD(System.String,ThingsGateway.Foundation.BcdFormat)">
            <summary>
            获取BCD值
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.GetDataByBitIndex(System.Int32)">
            <summary>
            返回bit代表的数据
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.GetIntByHexChar(System.Char)">
            <summary>
            16进制Char转int
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.SpliceArray``1(``0[][])">
            <summary>
            拼接任意个泛型数组为一个总的泛型数组对象，采用深度拷贝实现。
            </summary>
            <typeparam name="T">数组的类型信息</typeparam>
            <param name="arrays">任意个长度的数组</param>
            <returns>拼接之后的最终的结果对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.SplitIntegerToArray(System.Int32,System.Int32)">
            <summary>
            将整数进行有效的拆分成数组，指定每个元素的最大值
            </summary>
            <param name="integer">整数信息</param>
            <param name="everyLength">单个的数组长度</param>
            <returns>拆分后的数组长度</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.DataTransUtil.SplitReadLength(System.Int32,System.UInt16,System.UInt16)">
            <summary>
            切割当前的地址数据信息，根据读取的长度来分割成多次不同的读取内容，需要指定地址，总的读取长度，切割读取长度
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.MessageBase">
            <inheritdoc cref="T:ThingsGateway.Foundation.IMessage"/>
        </member>
        <member name="P:ThingsGateway.Foundation.MessageBase.BodyLength">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.MessageBase.HeadBytes">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.MessageBase.HeadBytesLength">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.MessageBase.ReceivedBytes">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.MessageBase.SendBytes">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.MessageBase.CheckHeadBytes(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.MessageBase.SendBytesThen">
            <summary>
            写入<see cref="P:ThingsGateway.Foundation.MessageBase.SendBytes"/>后触发此方法
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.IMessage">
            <summary>
            采集返回消息
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IMessage.BodyLength">
            <summary>
            实体数据长度
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IMessage.Content">
            <summary>
            解析后的字节数据
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IMessage.HeadBytes">
            <summary>
            消息头字节
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IMessage.HeadBytesLength">
            <summary>
            消息头的指令长度
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IMessage.ReceivedBytes">
            <summary>
            接收的字节信息
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IMessage.SendBytes">
            <summary>
            发送的字节信息
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IMessage.CheckHeadBytes(System.Byte[])">
            <summary>
            检查头子节的合法性,并赋值<see cref="P:ThingsGateway.Foundation.IMessage.BodyLength"/><br />
            </summary>
            <param name="head">接收的头子节</param>
            <returns>是否成功的结果</returns>
        </member>
        <member name="T:ThingsGateway.Foundation.IOperResult">
            <summary>
            操作接口
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IOperResult.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IOperResult.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IOperResult.ResultCode">
            <summary>
            操作代码
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.OperResult`1">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`1.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`1.#ctor(TouchSocket.Core.ResultCode,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`1.#ctor(`0)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`1.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`1.#ctor(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult`1.Content">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`1.Then``1(System.Func{`0,ThingsGateway.Foundation.OperResult{``0}})">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.OperResult`2">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`2.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`2.#ctor(TouchSocket.Core.ResultCode,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`2.#ctor(`0,`1)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`2.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`2.#ctor(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult`2.Content1">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult`2.Content2">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.OperResult`3">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`3.#ctor(TouchSocket.Core.ResultCode,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`3.#ctor(`0,`1,`2)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`3.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult`3.#ctor(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult`3.Content1">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult`3.Content2">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult`3.Content3">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.OperResult">
            <inheritdoc cref="T:ThingsGateway.Foundation.IOperResult"/>
        </member>
        <member name="F:ThingsGateway.Foundation.OperResult.Code">
            <summary>
            业务错误代码
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.#ctor(TouchSocket.Core.ResultCode,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.#ctor(TouchSocket.Core.ResultCode)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.#ctor(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.#ctor(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult.Exception">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult.IsSuccess">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult.Message">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.OperResult.ResultCode">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.CreateFailedResult``1(ThingsGateway.Foundation.OperResult)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.CreateFailedResult``2(ThingsGateway.Foundation.OperResult)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.CreateFailedResult``3(ThingsGateway.Foundation.OperResult)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.CreateSuccessResult">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.CreateSuccessResult``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.CreateSuccessResult``2(``0,``1)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.CreateSuccessResult``3(``0,``1,``2)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.OperResult.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.ThingsGatewayStatus">
            <summary>
            资源枚举
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.ThingsGatewayStatus.DataTransError">
            <summary>
            数据转换失败
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.ThingsGatewayStatus.Received">
            <summary>
            接收
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.ThingsGatewayStatus.Send">
            <summary>
            发送
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.ThingsGatewayStatus.SourceHexData">
            <summary>
            原始字节数据
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.ThingsGatewayStatus.UnknownError">
            <summary>
            未知错误
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialConnectingEventHandler`1">
            <summary>
            Connecting
            </summary>
            <typeparam name="TClient"></typeparam>
            <param name="client"></param>
            <param name="e"></param>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialConnectingEventArgs">
            <summary>
            客户端连接事件。
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialConnectingEventArgs.#ctor(System.IO.Ports.SerialPort)">
            <summary>
            构造函数
            </summary>
            <param name="serialPort"></param>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialConnectingEventArgs.Id">
            <summary>
            客户端Id。该Id的赋值，仅在服务器适用。
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialConnectingEventArgs.SerialPort">
            <summary>
            新初始化的通信器
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialReceivedEventArgs">
            <summary>
            字节事件
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialReceivedEventArgs.UserToken">
            <summary>
            数据块
            </summary>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialConfigExtension">
            <summary>
            串口附加属性
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.Serial.SerialConfigExtension.SerialProperty">
            <summary>
            串口属性
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialConfigExtension.SetSerialProperty(TouchSocket.Core.TouchSocketConfig,ThingsGateway.Foundation.Serial.SerialProperty)">
            <summary>
            设置串口
            </summary>
            <param name="config"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.ISerial">
            <summary>
            串口基接口
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerial.BufferLength">
            <summary>
            数据交互缓存池限制
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerial.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.ISerial.SetBufferLength(System.Int32)">
            <summary>
            设置数据交互缓存池尺寸，min=1024 byte。
            一般情况下该值用于三个方面，包括：发送、接收缓存，及内存池的默认申请。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.ISerialSession">
            <summary>
            <inheritdoc cref="T:ThingsGateway.Foundation.Serial.ISerialSessionBase"/>
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSession.Connected">
            <summary>
            成功打开串口
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSession.Connecting">
            <summary>
            准备连接串口的时候
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.ISerialSession.Connect">
            <summary>
            连接串口
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.ISerialSession.Setup(TouchSocket.Core.TouchSocketConfig)">
            <summary>
            配置服务器
            </summary>
            <param name="config"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.ISerialSessionBase">
            <summary>
            串口连接接口。
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.CanSetDataHandlingAdapter">
            <summary>
            是否允许自由调用<see cref="M:ThingsGateway.Foundation.Serial.ISerialSessionBase.SetDataHandlingAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)"/>进行赋值。
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.Config">
            <summary>
            客户端配置
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.DataHandlingAdapter">
            <summary>
            数据处理适配器
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.Disconnected">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.Disconnecting">
            <summary>
            即将断开连接(仅主动断开时有效)。
            <para>
            </para>
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.MainSerialPort">
            <summary>
            主通信器
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.ReceiveType">
            <summary>
            接收模式
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.ISerialSessionBase.SerialProperty">
            <summary>
            串口描述
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.ISerialSessionBase.Close(System.String)">
            <summary>
            关闭客户端。
            </summary>
            <param name="msg"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.ISerialSessionBase.SetDataHandlingAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)">
            <summary>
            设置数据处理适配器
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.BaseSerial">
            <summary>
            通讯基类
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.Serial.BaseSerial.SyncRoot">
            <summary>
            同步根。
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.BaseSerial.#ctor">
            <summary>
            通讯基类
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.BaseSerial.BufferLength">
            <summary>
            数据交互缓存池限制，min=1024 byte
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.BaseSerial.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.BaseSerial.SetBufferLength(System.Int32)">
            <summary>
            设置数据交互缓存池尺寸，min=1024 byte。
            一般情况下该值用于三个方面，包括：socket的发送、接收缓存，及内存池的默认申请。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialDelaySender">
            <summary>
            延迟发送器
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialDelaySender.#ctor(System.IO.Ports.SerialPort,TouchSocket.Sockets.DelaySenderOption,System.Action{System.Exception})">
            <summary>
            延迟发送器
            </summary>
            <param name="serialPort"></param>
            <param name="onError"></param>
            <param name="delaySenderOption"></param>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialDelaySender.DelayLength">
            <summary>
            延迟包最大尺寸。
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialDelaySender.Sending">
            <summary>
            是否处于发送状态
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialDelaySender.Send(TouchSocket.Core.QueueDataBytes)">
            <summary>
            发送
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialDelaySender.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialProperty">
            <summary>
            串口属性
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialProperty.PortName">
            <summary>
            COM
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialProperty.BaudRate">
            <summary>
            波特率
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialProperty.DataBits">
            <summary>
            数据位
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialProperty.Parity">
            <summary>
            校验位
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialProperty.StopBits">
            <summary>
            停止位
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialsSession">
            <inheritdoc cref="T:ThingsGateway.Foundation.Serial.SerialSessionBase"/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialsSession.Received">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialsSession.HandleReceivedData(TouchSocket.Core.ByteBlock,TouchSocket.Core.IRequestInfo)">
            <summary>
            接收数据
            </summary>
            <param name="byteBlock"></param>
            <param name="requestInfo"></param>
        </member>
        <member name="T:ThingsGateway.Foundation.Serial.SerialSessionBase">
            <summary>
            串口管理
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Connected">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Connecting">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Disconnected">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Disconnecting">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.OnConnected(TouchSocket.Sockets.ConnectedEventArgs)">
            <summary>
            已经建立Tcp连接
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.OnConnecting(ThingsGateway.Foundation.Serial.SerialConnectingEventArgs)">
            <summary>
            准备连接的时候，此时已初始化Socket，但是并未建立Tcp连接
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.OnDisconnected(TouchSocket.Sockets.DisconnectEventArgs)">
            <summary>
            断开连接。在客户端未设置连接状态时，不会触发
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.OnDisconnecting(TouchSocket.Sockets.DisconnectEventArgs)">
            <summary>
            即将断开连接(仅主动断开时有效)。
            <para>
            当主动调用Close断开时。
            </para>
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.LastReceivedTime">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.LastSendTime">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.OnHandleRawBuffer">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.OnHandleReceivedData">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Container">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.CanSetDataHandlingAdapter">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Config">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.DataHandlingAdapter">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.SerialProperty">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.MainSerialPort">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Online">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.CanSend">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.PluginsManager">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.ReceiveType">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.Serial.SerialSessionBase.Protocol">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Close(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Dispose(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Open">
            <summary>
            打开串口
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Connect">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.ConnectAsync">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.SetDataHandlingAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Setup(TouchSocket.Core.TouchSocketConfig)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.HandleReceivedData(TouchSocket.Core.ByteBlock,TouchSocket.Core.IRequestInfo)">
            <summary>
            处理已接收到的数据。
            </summary>
            <param name="byteBlock">以二进制流形式传递</param>
            <param name="requestInfo">以解析的数据对象传递</param>
            <returns>如果返回<see langword="true"/>则表示数据已被处理，且不会再向下传递。</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.HandleSendingData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            当即将发送时，如果覆盖父类方法，则不会触发插件。
            </summary>
            <param name="buffer">数据缓存区</param>
            <param name="offset">偏移</param>
            <param name="length">长度</param>
            <returns>返回值表示是否允许发送</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.LoadConfig(TouchSocket.Core.TouchSocketConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.OnDelaySenderError(System.Exception)">
            <summary>
            在延迟发生错误
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.SetAdapter(TouchSocket.Core.SingleStreamDataHandlingAdapter)">
            <summary>
            设置适配器，该方法不会检验<see cref="P:ThingsGateway.Foundation.Serial.SerialSessionBase.CanSetDataHandlingAdapter"/>的值。
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.HandleBuffer(TouchSocket.Core.ByteBlock)">
            <summary>
            处理数据
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Send(TouchSocket.Core.IRequestInfo)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="requestInfo"></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="transferBytes"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.SendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.SendAsync(TouchSocket.Core.IRequestInfo)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="requestInfo"></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="transferBytes"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.DefaultSend(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="M:ThingsGateway.Foundation.Serial.SerialSessionBase.DefaultSendAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="buffer"><inheritdoc/></param>
            <param name="offset"><inheritdoc/></param>
            <param name="length"><inheritdoc/></param>
            <exception cref="T:TouchSocket.Sockets.NotConnectedException"><inheritdoc/></exception>
            <exception cref="T:TouchSocket.Core.OverlengthException"><inheritdoc/></exception>
            <exception cref="T:System.Exception"><inheritdoc/></exception>
        </member>
        <member name="T:ThingsGateway.Foundation.SerialPortExtensions">
            <summary>
            SocketExtension
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.SerialPortExtensions.AbsoluteSend(System.IO.Ports.SerialPort,System.Byte[],System.Int32,System.Int32)">
            <summary>
            会使用同步锁，保证所有数据上缓存区。
            </summary>
            <param name="serialPort"></param>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.SerialPortExtensions.TryClose(System.IO.Ports.SerialPort)">
            <summary>
            尝试关闭<see cref="T:System.IO.Ports.SerialPort"/>。不会抛出异常。
            </summary>
            <param name="serialPort"></param>
        </member>
        <member name="T:ThingsGateway.Foundation.BcdFormat">
            <summary>
            BCD格式化值
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.BcdFormat.C8421">
            <inheritdoc/>
        </member>
        <member name="F:ThingsGateway.Foundation.BcdFormat.C5421">
            <inheritdoc/>
        </member>
        <member name="F:ThingsGateway.Foundation.BcdFormat.C2421">
            <inheritdoc/>
        </member>
        <member name="F:ThingsGateway.Foundation.BcdFormat.C3">
            <inheritdoc/>
        </member>
        <member name="F:ThingsGateway.Foundation.BcdFormat.Gray">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.DataFormat">
            <summary>
            应用于多字节数据的解析或是生成格式<br />
            </summary>
        </member>
        <member name="F:ThingsGateway.Foundation.DataFormat.ABCD">
            <summary>Big-Endian</summary>
        </member>
        <member name="F:ThingsGateway.Foundation.DataFormat.BADC">
            <summary>Big-Endian Byte Swap</summary>
        </member>
        <member name="F:ThingsGateway.Foundation.DataFormat.CDAB">
            <summary>Little-Endian Byte Swap</summary>
        </member>
        <member name="F:ThingsGateway.Foundation.DataFormat.DCBA">
            <summary>Little-Endian</summary>
        </member>
        <member name="T:ThingsGateway.Foundation.IThingsGatewayBitConverter">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IThingsGatewayBitConverter.DataFormat">
            <summary>
            4字节数据转换规则
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IThingsGatewayBitConverter.EndianType">
            <summary>
            指定大小端。
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.IThingsGatewayBitConverter.Encoding">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.IThingsGatewayBitConverter.BcdFormat">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.IThingsGatewayBitConverter.StringLength">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.IThingsGatewayBitConverter.IsStringReverseByteWord">
            <summary>
            获取或设置在解析字符串的时候是否将字节按照字单位反转
            </summary>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.CreateByDateFormat(ThingsGateway.Foundation.DataFormat)">
            <summary>
            根据<see cref="P:ThingsGateway.Foundation.IThingsGatewayBitConverter.DataFormat"/> 获取新的<see cref="T:ThingsGateway.Foundation.IThingsGatewayBitConverter"/>
            </summary>
            <param name="dataFormat"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Boolean)">
            <summary>
            bool变量转化缓存数据，一般来说单bool只能转化为0x01 或是 0x00<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Boolean[])">
            <summary>
            将bool数组变量转化缓存数据，如果数组长度不满足8的倍数，则自动补0操作。<br />
            </summary>
            <param name="values">等待转化的数组</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Int16)">
            <summary>
            short变量转化缓存数据，一个short数据可以转为2个字节的byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Int16[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.UInt16[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.UInt32[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Int64[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.UInt64[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Single[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.UInt16)">
            <summary>
            ushort变量转化缓存数据，一个ushort数据可以转为2个字节的Byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Int32)">
            <summary>
            int变量转化缓存数据，一个int数据可以转为4个字节的byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.UInt32)">
            <summary>
            uint变量转化缓存数据，一个uint数据可以转为4个字节的byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Int64)">
            <summary>
            long变量转化缓存数据，一个long数据可以转为8个字节的byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.UInt64)">
            <summary>
            ulong变量转化缓存数据，一个ulong数据可以转为8个字节的byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Single)">
            <summary>
            float变量转化缓存数据，一个float数据可以转为4个字节的byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.Double)">
            <summary>
            double变量转化缓存数据，一个double数据可以转为8个字节的byte数组<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.GetBytes(System.String)">
            <summary>
            使用指定的编码字符串转化缓存数据<br />
            </summary>
            <param name="value">等待转化的数据</param>
            <returns>buffer数据</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.IsSameOfSet">
            <summary>
            判断当前系统是否为设置的大小端
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToBoolean(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取出bool结果，需要传入想要提取的位索引，注意：是从0开始的位索引，10则表示 buffer[1] 的第二位。<br />
            </summary>
            <param name="buffer">等待提取的缓存数据</param>
            <param name="offset">位的索引，注意：是从0开始的位索引，10则表示 buffer[1] 的第二位。</param>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToBoolean(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToByte(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToByte(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToDouble(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取double结果，需要指定起始的字节索引，按照字节为单位，一个double占用八个字节<br />
            </summary>
            <param name="buffer">缓存对象</param>
            <param name="offset">索引位置</param>
            <returns>double对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToDouble(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToInt16(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取short结果，需要指定起始的字节索引，按照字节为单位，一个short占用两个字节<br />
            </summary>
            <param name="buffer">缓存数据</param>
            <param name="offset">索引位置</param>
            <returns>short对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToInt16(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToInt32(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取int结果，需要指定起始的字节索引，按照字节为单位，一个int占用四个字节<br />
            </summary>
            <param name="buffer">缓存数据</param>
            <param name="offset">索引位置</param>
            <returns>int对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToInt32(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToInt64(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取long结果，需要指定起始的字节索引，按照字节为单位，一个long占用八个字节<br />
            </summary>
            <param name="buffer">缓存数据</param>
            <param name="offset">索引位置</param>
            <returns>long对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToInt64(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToSingle(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取float结果，需要指定起始的字节索引，按照字节为单位，一个float占用四个字节<b />
            </summary>
            <param name="buffer">缓存对象</param>
            <param name="offset">索引位置</param>
            <returns>float对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToSingle(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToString(System.Byte[])">
            <summary>
            从缓存中提取string结果，使用指定的编码将全部的缓存转为字符串<br />
            </summary>
            <param name="buffer">缓存对象</param>
            <returns>string对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从缓存中的部分字节数组转化为string结果，使用指定的编码，指定起始的字节索引，字节长度信息。<br />
            </summary>
            <param name="buffer">缓存对象</param>
            <param name="offset">索引位置</param>
            <param name="length">byte数组长度</param>
            <returns>string对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToUInt16(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取ushort结果，需要指定起始的字节索引，按照字节为单位，一个ushort占用两个字节<br />
            </summary>
            <param name="buffer">缓存数据</param>
            <param name="offset">索引位置</param>
            <returns>ushort对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToUInt16(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToUInt32(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取uint结果，需要指定起始的字节索引，按照字节为单位，一个uint占用四个字节<br />
            </summary>
            <param name="buffer">缓存数据</param>
            <param name="offset">索引位置</param>
            <returns>uint对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToUInt32(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToUInt64(System.Byte[],System.Int32)">
            <summary>
            从缓存中提取ulong结果，需要指定起始的字节索引，按照字节为单位，一个ulong占用八个字节<b />
            </summary>
            <param name="buffer">缓存数据</param>
            <param name="offset">索引位置</param>
            <returns>ulong对象</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.IThingsGatewayBitConverter.ToUInt64(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:ThingsGateway.Foundation.ThingsGatewayBitConverter">
            <summary>
            将基数据类型转换为指定端的一个字节数组，
            或将一个字节数组转换为指定端基数据类型。
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.ThingsGatewayBitConverter.Encoding">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ThingsGatewayBitConverter.BcdFormat">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ThingsGatewayBitConverter.StringLength">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.#ctor(TouchSocket.Core.EndianType)">
            <summary>
            构造函数
            </summary>
            <param name="endianType"></param>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.#ctor(TouchSocket.Core.EndianType,ThingsGateway.Foundation.DataFormat)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:ThingsGateway.Foundation.ThingsGatewayBitConverter.DataFormat">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ThingsGatewayBitConverter.EndianType">
            <inheritdoc/>
        </member>
        <member name="P:ThingsGateway.Foundation.ThingsGatewayBitConverter.IsStringReverseByteWord">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.CreateByDateFormat(ThingsGateway.Foundation.DataFormat)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Boolean[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Int16)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Int16[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.UInt16[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.UInt32[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Int64[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.UInt64)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.UInt64[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Single[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.Double[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.GetBytes(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.IsSameOfSet">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToBoolean(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToByte(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToByte(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToDouble(System.Byte[],System.Int32)">
            <summary>
             转换为指定端模式的double数据。
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToInt16(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToInt32(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToInt64(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToSingle(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToString(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToUInt16(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToUInt32(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToUInt64(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ByteTransDataFormat4(System.Byte[],System.Int32)">
            <summary>反转多字节的数据信息</summary>
            <param name="value">数据字节</param>
            <param name="offset">起始索引，默认值为0</param>
            <returns>实际字节信息</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ByteTransDataFormat8(System.Byte[],System.Int32)">
            <summary>反转多字节的数据信息</summary>
            <param name="value">数据字节</param>
            <param name="offset">起始索引，默认值为0</param>
            <returns>实际字节信息</returns>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToBoolean(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToDouble(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToInt16(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToInt32(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToInt64(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToSingle(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToUInt16(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToUInt32(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ThingsGateway.Foundation.ThingsGatewayBitConverter.ToUInt64(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
    </members>
</doc>
