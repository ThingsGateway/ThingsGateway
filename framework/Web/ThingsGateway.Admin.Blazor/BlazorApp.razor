@*
//------------------------------------------------------------------------------
//  此代码版权声明为全文件覆盖，如有原作者特别声明，会在下方手动补充
//  此代码版权（除特别声明外的代码）归作者本人Diego所有
//  源代码使用协议遵循本仓库的开源协议及附加协议
//  Gitee源代码仓库：https://gitee.com/diego2098/ThingsGateway
//  Github源代码仓库：https://github.com/kimdiego2098/ThingsGateway
//  使用文档：https://diego2098.gitee.io/thingsgateway-docs/
//  QQ群：605534569
//------------------------------------------------------------------------------
*@

@using System.Reflection;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(BlazorApp).Assembly" AdditionalAssemblies=@(GetAssemblys())>
        <Found Context="routeData">
            <AuthorizeRouteView Resource="@routeData" RouteData="@routeData" DefaultLayout="typeof(BaseLayout)">
                <NotAuthorized>
                    @if (UserManager.UserId > 0)
                    {
                        <LayoutView Layout="@typeof(MainLayout)">
                            <Auth401></Auth401>
                        </LayoutView>
                    }
                    else
                    {
                        if (UserManager.UserId <= 0)
                        {
                            <Login></Login>
                        }
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(BaseLayout)">
                <NotFound404></NotFound404>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
@code {
    IEnumerable<Assembly> GetAssemblys()
    {
        var controllerTypes = App.EffectiveTypes.
    Where(u => !u.IsInterface && !u.IsAbstract && u.IsClass
    && u.IsDefined(typeof(Microsoft.AspNetCore.Components.RouteAttribute), false))
    .Where(it => it.Assembly != typeof(BlazorApp).Assembly);
        var assemblys = controllerTypes?.Select(it => it.Assembly)?.Distinct();
        return assemblys;
    }

}