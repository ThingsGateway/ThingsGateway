@*
//------------------------------------------------------------------------------
//  此代码版权声明为全文件覆盖，如有原作者特别声明，会在下方手动补充
//  此代码版权（除特别声明外的代码）归作者本人Diego所有
//  源代码使用协议遵循本仓库的开源协议及附加协议
//  Gitee源代码仓库：https://gitee.com/diego2098/ThingsGateway
//  Github源代码仓库：https://github.com/kimdiego2098/ThingsGateway
//  使用文档：https://diego2098.gitee.io/thingsgateway-docs/
//  QQ群：605534569
//------------------------------------------------------------------------------
*@

@using Microsoft.AspNetCore.Components.Routing
@using ThingsGateway.Application;
@using ThingsGateway.Core;
@inject NavigationManager NavigationManager
@inject UserResoures UserResoures
@namespace ThingsGateway.Web.Rcl.Core
<MCard Height=HeightInt Elevation="0" Class="d-flex justify-center align-center rounded-0" Style=@($"background-color:inherit;width:100%;text-decoration: none;")>
    <div class="d-flex justify-center align-center rounded-0" @onclick=@(()=>NavigationManager.NavigateTo("/index",false))>

        <MAvatar MinWidth=30 MinHeight=30 MaxWidth=35 MaxHeight=35 Color="teal">
            <span class="white--text text-subtitle-1">@SYS_DEFAULT_TITLE.GetNameLen2()</span>
        </MAvatar>
        <MLabel Style="background-color:inherit;" Class="primary--text text-h6 ml-1">@SYS_DEFAULT_TITLE</MLabel>
    </div>
</MCard>

@code {
    [Parameter]
    public int HeightInt { get; set; }
    private string SYS_COPYRIGHT_URL = "";
    private string SYS_COPYRIGHT = "";
    private string SYS_DEFAULT_TITLE = "";
    [Inject]
    public IConfigService ConfigService { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        SYS_COPYRIGHT = (await ConfigService.GetByConfigKey(CateGoryConst.Config_SYS_BASE, DevConfigConst.SYS_COPYRIGHT)).ConfigValue;
        SYS_DEFAULT_TITLE = (await ConfigService.GetByConfigKey(CateGoryConst.Config_SYS_BASE, DevConfigConst.SYS_DEFAULT_TITLE)).ConfigValue;
        SYS_COPYRIGHT_URL = (await ConfigService.GetByConfigKey(CateGoryConst.Config_SYS_BASE, DevConfigConst.SYS_COPYRIGHT_URL)).ConfigValue;
        await base.OnParametersSetAsync();
    }


}
